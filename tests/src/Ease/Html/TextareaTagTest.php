<?php

declare (strict_types=1);

namespace Test\Ease\Html;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-17 at 23:59:23.
 */
class TextareaTagTest extends PairTagTest {

    /**
     * @var TextareaTag
     */
    protected $object;
    public $rendered = '<textarea name="textarea"></textarea>';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void {
        $this->object = new \Ease\Html\TextareaTag('textarea');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void {
        
    }

    public function testConstructor() {
        $classname = get_class($this->object);

        // Get mock, without the constructor being called
        $mock = $this->getMockBuilder($classname)
                ->disableOriginalConstructor()
                ->getMockForAbstractClass();
        $mock->__construct('Test');
        $mock->__construct('Textarea', 'Text');
        $this->assertEquals('<textarea name="Textarea">Text</textarea>', $mock->getRendered());
    }

    /**
     * @covers Ease\Html\TextareaTag::setValue
     */
    public function testSetValue() {
        $this->object->setValue('test');
        $this->assertEquals('<textarea name="textarea">test</textarea>', $this->object->getRendered());
    }

    /**
     * @covers Ease\Html\TextareaTag::getTagName
     */
    public function testGetTagName() {
        $this->assertEquals('textarea', $this->object->getTagName());
        $this->object->setName = true;
        $this->object->setTagName('Test');
        $this->assertEquals('Test', $this->object->getTagName());
    }

}
