<?php

declare (strict_types=1);

namespace Test\Ease;

use Ease\WebPage;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-17 at 23:58:34.
 */
class WebPageTest extends DocumentTest
{

    /**
     * @var WebPage
     */
    protected $object;
    public $rendered = '<!DOCTYPE html><html lang="cs"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title></title></head><body></body></html>';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new WebPage();
        \Ease\WebPage::singleton()->cascadeStyles = [];
        \Ease\Document::singleton()->javaScripts = [];
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
        
    }

    /**
     * @covers Ease\WebPage::setTagID
     */
    public function testSetTagID()
    {
        $this->object->setTagID('test');
        $this->assertEquals('test', $this->object->getTagID());
    }

    /**
     * @covers Ease\WebPage::addItem
     */
    public function testAddItem()
    {
        $this->object->emptyContents();
        $tester = new \Ease\Html\SpanTag();
        $this->object->addItem($tester);
        $this->assertEquals($this->object->getFirstPart(), $tester);
    }

    /**
     * @covers Ease\WebPage::includeJavaScript
     */
    public function testIncludeJavaScript()
    {
        \Ease\WebPage::singleton()->javaScripts = [];
        $this->object->includeJavaScript('WebPage.js');
        $this->assertEquals(['#WebPage.js'],
                \Ease\WebPage::singleton()->javaScripts);
        \Ease\Document::singleton()->javaScripts = [];
    }

    /**
     * @covers Ease\WebPage::addJavaScript
     */
    public function testAddJavaScript()
    {
        $this->assertEquals(0,
                $this->object->addJavaScript('alert("WebPageTest")'));
        \Ease\Document::singleton()->javaScripts = [];
    }

    /**
     * @covers Ease\WebPage::addToScriptsStack
     */
    public function testAddToScriptsStack()
    {
        $this->assertEquals(0, $this->object->addToScriptsStack('var test = 1;'));
        \Ease\Document::singleton()->javaScripts = [];
    }

    /**
     * @covers Ease\WebPage::addCSS
     */
    public function testAddCSS()
    {
        $this->assertTrue($this->object->addCSS('border: 1px solid red'));
    }

    /**
     * @covers Ease\WebPage::includeCss
     */
    public function testIncludeCss()
    {
        $this->assertTrue($this->object->includeCss('WebPage.css'));
        $this->assertTrue($this->object->includeCss('WebPage.css', '/js/'));
        \Ease\WebPage::singleton()->cascadeStyles = [];
    }

    /**
     * @covers Ease\WebPage::getStatusMessagesBlock
     */
    public function testGetStatusMessagesBlock()
    {
        \Ease\Shared::logger()->cleanMessages();
        $this->object->addStatusMessage('success Status message for testGetStatusMessagesAsHtml',
                'success');
        $this->object->addStatusMessage('warning Status message for testGetStatusMessagesAsHtml',
                'warning');
        $this->object->addStatusMessage('error Status message for testGetStatusMessagesAsHtml',
                'error');
        $this->assertEquals('<div><div style="color: #2C5F23;" data-caller="Ease\WebPage">success Status message for testGetStatusMessagesAsHtml</div><div style="color: #AB250E;" data-caller="Ease\WebPage">warning Status message for testGetStatusMessagesAsHtml</div><div style="color: red;" data-caller="Ease\WebPage">error Status message for testGetStatusMessagesAsHtml</div></div>',
                $this->object->getStatusMessagesBlock()->__toString());
    }

    /**
     * @covers Ease\WebPage::draw
     */
    public function testDraw($whatWant = null)
    {
        $this->object->emptyContents();
        \Ease\WebPage::singleton()->javaScripts = [];
        \Ease\WebPage::singleton()->cascadeStyles = [];
        parent::testDraw($whatWant);
    }

    /**
     * @covers Ease\WebPage::finalizeRegistred
     */
    public function testFinalizeRegistred()
    {
        $this->object->finalizeRegistred();
        $this->assertEmpty(WebPage::$allItems);
    }

    /**
     * @covers Ease\WebPage::setPageTitle
     *
     * @todo   Implement testSetPageTitle().
     */
    public function testSetPageTitle()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Ease\WebPage::getItemsCount
     */
    public function testGetItemsCount()
    {
        $this->assertEquals(0, $this->object->getItemsCount());
    }

    /**
     * @covers Ease\WebPage::drawIfNotDrawn
     */
    public function testDrawIfNotDrawn($canBeEmpty = false)
    {
        parent::testDrawIfNotDrawn($canBeEmpty);
    }
}