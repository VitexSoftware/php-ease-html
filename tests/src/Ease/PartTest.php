<?php

declare(strict_types=1);

/**
 * This file is part of the EaseHtml package
 *
 * https://github.com/VitexSoftware/php-ease-html
 *
 * (c) Vítězslav Dvořák <http://vitexsoftware.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Test\Ease;

use Ease\Part;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2024-12-22 at 17:13:37.
 */
class PartTest extends \PHPUnit\Framework\TestCase
{
    protected Part $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {
        $this->object = new Part();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {
    }

    /**
     * @covers \Ease\Part::setPartName
     */
    public function testsetPartName(): void
    {
        $testName = 'testDiv';
        $this->object->setPartName($testName);
        $this->assertEquals($testName, $this->object->partName);
    }

    /**
     * @covers \Ease\Part::onDocumentReady
     */
    public function testonDocumentReady(): void
    {
        $this->assertEquals('', $this->object->onDocumentReady());
    }

    /**
     * @covers \Ease\Part::finalize
     */
    public function testfinalize(): void
    {
        $this->assertEquals('', $this->object->finalize());
    }

    /**
     * @covers \Ease\Part::jQueryze
     */
    public function testjQueryze(): void
    {
        $this->assertEquals('', $this->object->jQueryze());
    }

    /**
     * @covers \Ease\Part::setPartProperties
     */
    public function testsetPartProperties(): void
    {
        $testProps = ['class' => 'myClass', 'id' => 'myId'];
        $this->object->setPartProperties($testProps);
        $this->assertEquals($testProps, $this->object->partProperties);
    }

    /**
     * @covers \Ease\Part::getPartPropertiesToString
     */
    public function testgetPartPropertiesToString(): void
    {
        $this->assertEquals('', $this->object->getPartPropertiesToString());
    }

    /**
     * @covers \Ease\Part::partPropertiesToString
     */
    public function testpartPropertiesToString(): void
    {
        $testProps = ['class' => 'myClass', 'id' => 'myId'];
        $result = \Ease\Part::partPropertiesToString($testProps);
        $this->assertIsString($result);
        $this->assertStringContainsString('myClass', $result);
        $this->assertStringContainsString('myId', $result);
    }
}
